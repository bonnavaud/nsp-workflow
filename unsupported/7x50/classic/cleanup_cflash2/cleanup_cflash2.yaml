version: '2.0'

cleanup_cflash2:
  type: direct

  description: Deletion of old files from CF-card in specified directories

  tags:
    - demo workflow by NOKIA

  workflow_meta:
    title:   Cleanup SR OS node cflash
    author:  NOKIA DEMO
    signature: 339b1df09534bc1467d034da192172114d7d9aaa631dd0d98614b1df075d498944a38bca7e02d763c19ff9cda269908de077e6c072a77390c40ec48e7b311a01b9954e65e872e17cb2a0b1f30b85187bc3e10ec7a7eeb99411250e967fcd880ecd6a460b8e1ef81ddca447bbd35eca53a8c4f52500bff394d0d8258dcb01efaf81797f85ab96918d9d1b29662140eb3bb5af17264be39b7ea5666fcbe5edca41951441a02908b4933d17e88dab967891959055e8d30832dc1c48ac87d48536dd4b5c5cfbe323ab18910661fadb0af9c576cb952237eaf4fcca2dc420eb6cd477e18bf4d4d10c73a1f12a9e7f05815e96fe384c8fd0875e5044f0fe5eea97ee61
    version: '1.0.0'
    license: BSD-3
    package: SROS Automation
    deprecated: false
    urls:
      homepage: https://github.com/nokia/nsp-workflow/tree/master/unsupported/7x50/classic/cleanup_cflash
      repository: https://github.com/nokia/nsp-workflow
      bugs: https://github.com/nokia/nsp-workflow/issues
    dependencies:
      platform:
        nspOS: ['18.12', '19.*']
        nfmp: []
      nodal:
        - type: 'Nokia 7x50'
          releases: ['14.0', '15.*', '16.0']
          mgmtmode: ['classic']

  input:
    - host:   138.120.48.245
    - user:   admin
    - passwd: admin
    - dirs: ['cf1:/demo', 'cf1:/act']
    - deleteBefore: '2019-05-01T00:00'
    - deleteAge: 3600
    - dryRun: true

  output:
    result: done
    filesDeleted: <% $.fileList %>

  output-on-error:
    result: failed

  tasks:
    getNodeTime:
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.user %>'
        password: '<% $.passwd %>'
        cmd: show time
      publish:
        nodeTime: <% task().result %>
      on-success:
        - readDirectories

    readDirectories:
      with-items: dir in <% $.dirs %>
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.user %>'
        password: '<% $.passwd %>'
        cmd:
          - environment no more
          - file dir <% $.dir %>
      publish:
        dirResults: <% task().result %>
      on-success:
        - applyFilter

    applyFilter:
      action: std.javascript
      input:
        context: <% $ %>
        script: |
          var safeList = ['bof.cfg', 'config.cfg', 'NVRAM.DAT', 'bootlog.txt', 'boot.ldr'];

          var files = $.dirResults;
          var delAge = <% int($.deleteAge) %>;
          var delBefore = $.deleteBefore
          var nodeTime = $.nodeTime["cmd1-show time"][1];

          if (delAge > 0) {
            var delTime = Date.parse(nodeTime) - 1000*delAge;
            var timeZone = nodeTime.split(/\s+/)[4];
          } else if (deleteBefore != "") {
            var delTime = Date.parse(deleteBefore);
            var timeZone = "UTC";
          } else {
            var delTime = Date.parse(nodeTime);
            var timeZone = nodeTime.split(/\s+/)[4];
          }

          var fileList = [];
          files.forEach(function(dir) {
            for (var key in dir) {
              if (key.startsWith("cmd2-")) {
                var currDir = key.split(/\s/)[2];
                dir[key].forEach(function(cmd) {
                  if (cmd.match(/^[0-9]{2}/)) {
                    var file = cmd.split(/\s+/);
                    if (!(safeList.indexOf(file[3])>-1) && (file[2]!=="<DIR>")) {
                      var [hour, minute] = file[1].split(/:/);
                      if ( minute.endsWith("p") && Number(hour)!==12) {
                        hour = Number(hour) + 12;
                      }
                      minute = minute.substring(0, minute.length-1);
                      var fileTime = new Date(file[0]+" "+hour+":"+minute+" "+timeZone);
                      if (Number(fileTime) < delTime) {
                        var fileFdn = currDir + "/" + file[3];
                        fileList.push(fileFdn);
                      }
                    }
                  }
                });
              }
            }
          });
          return fileList;

      publish:
        fileList: <% task().result %>
      on-success:
        - buildCLI: <% $.dryRun != true %>

    buildCLI:
      action: std.javascript
      input:
        context: <% $ %>
        script: |
          var cmdList=[];
          $.fileList.forEach(function(fname) {
            cmdList.push("/file delete "+fname+ " force");
          });
          return cmdList;
      publish:
        cmdList: <% task().result %>
      on-success:
        - deleteFiles

    deleteFiles:
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.user %>'
        password: '<% $.passwd %>'
        cmd: '<% $.cmdList %>'
      publish:
        cliResponse: <% task().result %>
      on-success:
        - chkResponses

    chkResponses:
      action: std.javascript
      input:
        context: <% $ %>
        script: |
          var status = false;
          for (var key in $.cliResponse) {
            $.cliResponse[key].forEach(function(line){
              if (line.startsWith("Deleting") && !(line.endsWith("OK"))) {
                status = true;
              }
            });
          }
          return status;
      publish:
        cliCheckFailed: <% task().result %>
      on-success:
        - fail: <% $.cliCheckFailed %>

...
