---
version: '2.0'

cleanup_cflash:
  type: direct

  description: Deletion of old files from CF-card in specified directories

  tags:
    - demo workflow by NOKIA

  workflow_meta:
    title:   Cleanup SR OS node cflash
    author:  NOKIA DEMO
    version: '1.0.0'
    license: BSD-3
    package: SROS Automation
    deprecated: false
    urls:
      homepage: https://github.com/nokia/nsp-workflow/tree/master/unsupported/7x50/cleanup_cflash
      repository: https://github.com/nokia/nsp-workflow
      bugs: https://github.com/nokia/nsp-workflow/issues
    dependencies:
      platform:
        nspOS: ['19.6']
      nodal:
        - type: 'Nokia 7x50'
          releases: ['19.5']
          mgmtmode: ['classic', 'model-driven']

  input:
    - token_auth:
    - host:   138.120.48.245
    - user:   admin
    - passwd: admin
    - dirs: ['cf1:/demo', 'cf1:/act']
    - deleteBefore: '2019-05-01T00:00'
    - deleteAge: 3600
    - dryRun: true

  output:
    result: done
    filesDeleted: <% $.fileList %>

  output-on-error:
    result: failed

  tasks:
    getEnvironment:
      action: environment
      publish:
        env: '<% task().result %>'
      on-success:
        getNodeTime

    getNodeTime:
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.env.neUsername %>'
        password: '<% $.env.nePassword %>'
        cmd: show time
      publish:
        nodeTime: <% task().result %>
      on-success:
        - readDirectories

    readDirectories:
      with-items: dir in <% $.dirs %>
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.env.neUsername %>'
        password: '<% $.env.nePassword %>'
        cmd:
          - environment no more
          - file dir <% $.dir %>
      publish:
        dirResults: <% task().result %>
      on-success:
        - applyFilter

    applyFilter:
      action: std.javascript
      input:
        context: <% $ %>
        script: |
          var safeList = ['bof.cfg', 'config.cfg', 'NVRAM.DAT', 'bootlog.txt', 'boot.ldr'];

          var files = $.dirResults;
          var delAge = <% int($.deleteAge) %>;
          var delBefore = $.deleteBefore
          var nodeTime = $.nodeTime["cmd1-show time"][1];

          if (delAge > 0) {
            var delTime = Date.parse(nodeTime) - 1000*delAge;
            var timeZone = nodeTime.split(/\s+/)[4];
          } else if (deleteBefore != "") {
            var delTime = Date.parse(deleteBefore);
            var timeZone = "UTC";
          } else {
            var delTime = Date.parse(nodeTime);
            var timeZone = nodeTime.split(/\s+/)[4];
          }

          var fileList = [];
          files.forEach(function(dir) {
            for (var key in dir) {
              if (key.startsWith("cmd2-")) {
                var currDir = key.split(/\s/)[2];
                dir[key].forEach(function(cmd) {
                  if (cmd.match(/^[0-9]{2}/)) {
                    var file = cmd.split(/\s+/);
                    if (!(safeList.indexOf(file[3])>-1) && (file[2]!=="<DIR>")) {
                      var [hour, minute] = file[1].split(/:/);
                      if ( minute.endsWith("p") && Number(hour)!==12) {
                        hour = Number(hour) + 12;
                      }
                      minute = minute.substring(0, minute.length-1);
                      var fileTime = new Date(file[0]+" "+hour+":"+minute+" "+timeZone);
                      if (Number(fileTime) < delTime) {
                        var fileFdn = currDir + "/" + file[3];
                        fileList.push(fileFdn);
                      }
                    }
                  }
                });
              }
            }
          });
          return fileList;

      publish:
        fileList: <% task().result %>
      on-success:
        - deleteFiles: <% $.dryRun != true %>

    deleteFiles:
      with-items: file in <% $.fileList %>
      action: nsp.sr_cli
      input:
        host: '<% $.host %>'
        username: '<% $.user %>'
        password: '<% $.passwd %>'
        cmd: file delete <% $.file %> force
      publish:
        cliResponse: <% task().result %>
      on-success:
        - chkResponses

    chkResponses:
      action: std.javascript
      input:
        context: <% $ %>
        script: |
          var cliResponse = $.cliResponse;
          var status = false;
          cliResponse.forEach(function(cmd){
            for (var key in cmd) {
              if (!(cmd[key][1].endsWith("OK"))) {
                status = true;
              }
            }
          });
          return status
      publish:
        cliCheckFailed: <% task().result %>
      on-success:
        - fail: <% $.cliCheckFailed %>

...
