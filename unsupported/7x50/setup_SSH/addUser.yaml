version: '2.0'

addUser:
  type: direct

  description: Add CLI user to a node (SSH authentication without password using auth-keys)

  tags:
    - demo workflow by NOKIA

  workflow_meta:
    title:   Add CLI user to a node
    author:  NOKIA DEMO
    signature: 90f0ee6e5c0a2c5dc43cd54cb124a8059da8aed2fadb0cc4ef5aae21c093258ffcb75eed4728bd358834ad4863ac3819524d709256ca982e7c8fafca566a2171ebbf9d9f9637c992315b45ee1e6090f72ca8fe7a9c5c67b06e34cfb72ba5511055a74d02cffc3b6d88d351fd9846ee11a04050d8c983e9801d4b27e586628db9dcc9d8628d0e4338058952faae89a7ee429bb03e0692b6da9acc3afd80fea5100ab59e340b4ad51dd025308f0d7ed147c85c2682c17f0d66dcac1c6d3e74fd33dcad6034ec230730da6c15aafda8b29d2eaddcfbcc2bac3233967be96857c6b12f89090f226017bb1767ceb92e15f4b4ff9bb8e9af622c231f21fb6d1c925cd0
    version: '1.0.0'
    license: BSD-3
    package: SROS Automation
    deprecated: false
    urls:
      homepage: https://github.com/nokia/nsp-workflow/tree/master/unsupported/7x50/setup_SSH
      repository: https://github.com/nokia/nsp-workflow
      bugs: https://github.com/nokia/nsp-workflow/issues
    dependencies:
      platform:
        nspOS: ['19.6']
      nodal:
        - type: 'Nokia 7x50'
          releases: ['19.5']
          mgmtmode: ['classic', 'model-driven']

  input:
    - token_auth:
    - neId: '1.1.1.1'
    - sshUsername: nspuser

  output:
    result: done

  output-on-error:
    result: failed

  tasks:
    getEnvironment:
      action: environment
      publish:
        env: '<% task().result %>'
      on-success:
        checkHost

    checkHost:
      action: std.http
      input:
        url: <% locate_nsp("networkElements") %>/v1/networkElements?filter=neId='<% $.neId %>'
        method: GET
        verify: False
        headers:
          Content-Type: application/json
          Authorization: Bearer <% $.token_auth %>
      publish:
        hostInfo: '<% task().result.content.response.data %>'
      on-success:
        - fail: <% $.hostInfo = [] %>
        - getHostInfo: <% $.hostInfo != [] %>

    getHostInfo:
      action: std.noop
      publish:
        host:     <% $.hostInfo.ipAddress.first() %>
        hostname: <% $.hostInfo.neName.first() %>
        hosttype: <% $.hostInfo.sourceType.first() %>
      on-success:
        - get_public_key

    get_public_key:
      action: std.ssh
      input:
        host: '<% $.env.wfmServer %>'
        username: '<% $.env.wfmUsername %>'
        password: '<% $.env.wfmPassword %>'
        cmd: |
          cat ~/.ssh/id_rsa.pub
      publish:
        rsakey: <% regex("\s*ssh-rsa\s+(\S+)\s+.*\n").replace(task().result, "\\1") %>
      on-success:
        - addSSHUserMDM: <% $.hosttype = 'mdm' %>
        - addSSHUserNFMP: <% $.hosttype = 'nfmp' %>

    addSSHUserMDM:
      action: std.http
      input:
        url: https://<% $.env.mdcServer %>:<% $.env.mdcPort %>/restconf/data/network-device-mgr:/network-elements/network-element=<% $.neId %>/root/nokia-conf:/configure/system/security/user-params/local-user/user=<% $.sshUsername %>
        method: PUT
        verify: False
        headers:
          Authorization: Bearer <% $.token_auth %>
          Accept: application/yang-data+json
          Content-Type: application/yang-data+json
        body:
          user-name: '<% $.sshUsername %>'
          password: 'NokiaNsp1!'
          console:
            member:
            - default
            - administrative
          access:
            console: true
          public-keys:
            rsa:
              rsa-key:
              - rsa-public-key-id: 1
                key-value: <% $.rsakey %>

    addSSHUserNFMP:
      action: std.http
      input:
        url: <% locate_nsp("samo_netw") %>/v2/netw/NetworkElement/executeMultiCli/network%3A<% $.neId %>
        method: PUT
        verify: false
        headers:
          Accept: 'application/json'
          Content-Type: 'application/json'
          Authorization: 'Bearer <% $.token_auth %>'
        body:
          - configure system security user <% $.sshUsername %>
          - access console
          - console member "administrative"
          - public-keys
          - rsa
          - rsa-key 1 create
          - key-value <% $.rsakey %>
          - exit all
      publish:
        status: <% task().result %>

...
